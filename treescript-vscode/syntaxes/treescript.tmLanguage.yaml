$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: TreeScript
scopeName: source.treescript
patterns:
- include: "#symbols"
- include: "#general"
repository:
  symbols:
    patterns:
    - include: "#import"
    - include: "#tupleRecordHead"
    - include: "#recordHead"
    - include: "#propKey"
    - include: "#bind"
    - include: "#function"
    - include: "#group"
  import:
    name: keyword.control.import.treescript
    match: '#([a-z]\w*)'
  tupleRecordHead:
    name: meta.record-head.tuple.treescript
    match: '(T)\['
    captures:
      '1': { name: keyword.control.record-head.tuple.treescript }
  recordHead:
    name: entity.name.function.record-head.treescript
    match: '[A-Z]\w*'
  propKey:
    name: variable.parameter.prop-key.treescript
    match: "[a-z]\\w*(?!\\w|')"
  bind:
    name: keyword.operator.bind.treescript
    match: '\\(_|[0-9]+|[a-z]\w*)'
    captures:
      '1': { name: entity.name.tag.treescript }
  function:
    name: support.class.group.function.treescript
    match: '#([A-Z]\w*)'
  group:
    name: support.class.group.regular.treescript
    match: '&([A-Za-z]?\w*)'

  general:
    patterns:
    - include: "#strings"
    - include: "#numbers"
    - include: "#comments"
    - include: "#punctuation"
  strings:
    patterns:
    - name: meta.target.javascript.treescript
      begin: "(js')"
      end: "(')"
      captures:
        '1': { name: string.quoted.single.treescript }
      patterns:
      - &escapeAbstraction
        name: constant.character.escape.treescript
        match: '\\(\.*(?:_|[0-9]+|[a-z]\w*))'
        captures:
          '1': { name: entity.name.tag.treescript }
      - name: keyword.operator.javascript
        match: '[\(\[\{\}\]\)]'
      - name: keyword.control.javascript
        match: 'function|class'
      - include: source.js
    - name: meta.target.markdown.treescript
      begin: "(md')"
      end: "(')"
      captures:
        '1': { name: string.quoted.single.treescript }
      patterns:
      - *escapeAbstraction
      - include: source.markdown
    - name: meta.target.r.treescript
      begin: "(r')"
      end: "(')"
      captures:
        '1': { name: string.quoted.single.treescript }
      patterns:
      - *escapeAbstraction
      - name: keyword.operator.r
        match: '[\(\[\{\}\]\)]'
      - include: source.r
    - name: meta.target.scheme.treescript
      begin: "(scheme')"
      end: "(')"
      captures:
        '1': { name: string.quoted.single.treescript }
      patterns:
      - *escapeAbstraction
      - include: source.scheme
    - name: meta.target.other.treescript
      begin: "((?:[a-z]\\w*)?')"
      end: "(')"
      captures:
        '1': { name: string.quoted.single.treescript }
      patterns:
      - *escapeAbstraction
      - include: source.text
    - name: string.quoted.double.treescript
      begin: '"'
      end: '"'
      patterns:
      - name: constant.character.escape.treescript
        match: '\\([xXoO][0-9]{3}|.)'
  numbers:
    name: constant.numeric.treescript
    match: '0[xbo][0-9]*|[0-9]+(?:[./][0-9]*)?'
  comments:
    patterns:
    - name: comment.line.double-slash.treescript
      begin: '\/\/'
      end: '$'
    - name: comment.block.treescript
      begin: '\/\*'
      end: '\*\/'
  punctuation:
    name: keyword.operator.treescript
    match: '->|<-|=>|[?.,;]'
